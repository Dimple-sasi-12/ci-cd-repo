pipeline {
    agent any
    tools {
    maven 'maven'
  }
     environment {
        SCANNER_HOME = tool 'sonarqube'
    }
    stages {
        stage('git checkout') {
            steps {
             git 'https://github.com/Dimple-sasi-12/ci-cd-repo.git'
            }
        }
         stage('compile') {
            steps {
              sh 'mvn compile'
            }
        }
         stage('code analysis') {
            steps {
              withSonarQubeEnv('sonar-server') {
               sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Java-Springboot \
               -Dsonar.java.binaries=. \
               -Dsonar.projectKey=Java-Springboot'''
              }
            }
        }
        stage('package') {
            steps {
              sh 'mvn install'
            }
        }
         stage('docker build') {
            steps {
             script {
                 sh 'docker build -t img .'
            }
          }
        }
          stage('docker push') {
            steps {
             script {
                   withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                    sh 'docker tag img bunny2003/java-spring'
                    sh 'docker push bunny2003/java-spring'
                    }
                  }
                }
              }
         stage('docker container') {
            steps {
             script {
               sh 'docker run -itd -p 8092:8000 img'
             }
            }
        }    
    }	
